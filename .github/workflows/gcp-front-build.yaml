name: GCP Build
on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      project_name:
        required: true
        type: string
      mode:
        description: 'yarn mode parameter'
        required: true
        default: 'development'
        type: string
      environment:
        description: 'environment where the service will be deployed'
        required: true
        default: 'stg'
        type: string
      dockerfile:
        required: false
        type: string
        default: "Dockerfile"
      no-cache:
        required: false
        type: string
        default: "false"
    secrets:
      GOOGLE_CREDENTIALS:
        required: false
      GCR_REGISTRY:
        required: false
      GH_PAT:
        required: true
      VAULT_TOKEN:
        required: true
      NPM_TOKEN:
        required: true
      PRITUNL_PROFILE_FILE:
        required: true
jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      short-sha: ${{ steps.short-sha.outputs.sha }}
    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Get Short ID
          uses: benjlevesque/short-sha@v2.2
          id: short-sha
          with:
            length: 7

        - name: Get Global Secrets
          id: global-secrets
          uses: bjerkio/vault-action@v1.0.2
          with:
            endpoint: "https://vault.services.spazious.com"
            path: "ci/global"
            authMethod: token
            token: ${{ secrets.VAULT_TOKEN }}
      
        # - uses: healthplace/npmrc-registry-login-action@v1.0
        #   with:
        #     scope: '@spazious'
        #     registry: "https://nexus.services.spazious.com/repository/spazious-npm/"
        #     auth-token: ''
  
        # - uses: mskelton/setup-yarn@v1
        #   env:
        #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        #   with:
        #     node-version: '18.x'

        # - name: Securirity Scan
        #   env:
        #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        #   continue-on-error: true
        #   run: yarn audit

        - name: Setup Vault Cli
          uses: eLco/setup-vault@v1
          with:
            # https://github.com/eLco/setup-vault/tree/v1/?tab=readme-ov-file#inputs
            vault_version: '~1.9.2'
          
        - name: Create .env
          env:
            VAULT_ADDR: "https://vault.services.spazious.com"
            VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          run: |
            vault kv get -format yaml -field=data "ci/${{ inputs.project_name }}/${{ inputs.environment }}"| sed 's/: /=/' > .env
      
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            registry: gcr.io
            username: _json_key
            password: ${{ secrets.GOOGLE_CREDENTIALS }}
  
        - name: Build and push the tagged docker image
          env:
            DOCKER_TAG: ${{ inputs.environment}}-${{ github.run_number }}-${{ github.run_attempt }}-${{ inputs.tag }}
            TARGET: ${{ inputs.mode }}
            ENVIRONMENT: ${{ inputs.environment}}
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
            SPZ_APP_SHORT_ID: ${{ steps.short-sha.outputs.sha }}
            SPZ_APP_BUILD_ID: ${{ github.run_number }}
          run: |
              args=()
              while IFS='=' read -r key value; do
                args+=(--build-arg "$key=$value")
              done < <(cat .env <(printenv | grep SPZ_))
              DOCKER_BUILDKIT=1 docker build -f ${{ inputs.dockerfile }} "${args[@]}" --build-arg SRC=$TARGET -t gcr.io/prj-management-407914/${{ inputs.project_name }}:$DOCKER_TAG .
              docker push gcr.io/prj-management-407914/${{ inputs.project_name }}:$DOCKER_TAG
