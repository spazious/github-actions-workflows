name: Docker Build and Push
on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      project_name:
        required: true
        type: string
      mode:
        description: 'yarn mode parameter'
        required: true
        default: 'development'
        type: string
      environment:
        description: 'environment where the service will be deployed'
        required: true
        default: 'stg'
        type: string
    secrets:
      GH_PAT:
        required: true
      VAULT_TOKEN:
        required: true
      NPM_TOKEN:
        required: true
      PRITUNL_PROFILE_FILE:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      AWS_ECR_REPO:
        required: true
jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Setup Pritunl Profile and Start VPN Connection
          id: pritunl-connection
          uses: nathanielvarona/pritunl-client-github-action@v1.1.3
          with:
            profile-file: ${{ secrets.PRITUNL_PROFILE_FILE }}
            start-connection: false

        - name: Starting a VPN Connection Manually
          run: |
            pritunl-client start ${{ steps.pritunl-connection.outputs.client-id }}
            
        - name: Get Global Secrets
          id: global-secrets
          uses: bjerkio/vault-action@v1.0.2
          with:
            endpoint: "https://vault.services.spazious.com"
            path: "ci/global"
            authMethod: token
            token: ${{ secrets.VAULT_TOKEN }}

        - name: Get Service Secrets
          id: service-secrets
          uses: bjerkio/vault-action@v1.0.2
          with:
            endpoint: "https://vault.services.spazious.com"
            path: "${{ inputs.project_name }}/ci"
            authMethod: token
            token: ${{ secrets.VAULT_TOKEN }}
          
        - name: Setup Vault Cli
          uses: eLco/setup-vault@v1
          with:
            version: '~1.9.2'

        - name: Create .env
          env:
            VAULT_ADDR: "https://vault.services.spazious.com"
            VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          run: |
            vault kv get -format yaml -field=data "${{ inputs.project_name }}/ci"| sed 's/: /=/' > .env
       
        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}

        - name: Login to Amazon ECR
          id: login-pf-aws-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build and push the tagged docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
            TARGET: ${{ inputs.mode }}
            ENVIRONMENT: ${{ inputs.environment}}
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}  
          run: |
            DOCKER_BUILDKIT=1 docker build --build-arg NPM_TOKEN=$NPM_TOKEN --build-arg SRC=$TARGET -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.tag }} .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.tag }}

        - name: Stop VPN Connection Manually
          if: ${{ always() }}
          run: |
            pritunl-client stop ${{ steps.pritunl-connection.outputs.client-id }}
